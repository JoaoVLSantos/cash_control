// Mocks generated by Mockito 5.4.5 from annotations
// in cash_control/test/mocks/mocksTest.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:ui' as _i24;

import 'package:cash_control/data/floor/app_database.dart' as _i36;
import 'package:cash_control/data/floor/dao/category_dao.dart' as _i6;
import 'package:cash_control/data/floor/dao/financial_entry_dao.dart' as _i7;
import 'package:cash_control/data/floor/dao/goal_dao.dart' as _i8;
import 'package:cash_control/data/floor/dao/user_dao.dart' as _i9;
import 'package:cash_control/data/floor/entities/category_entity.dart' as _i37;
import 'package:cash_control/data/repositories/category_repository.dart'
    as _i15;
import 'package:cash_control/data/repositories/financial_entry_repository.dart'
    as _i17;
import 'package:cash_control/data/repositories/financial_report_repository.dart'
    as _i19;
import 'package:cash_control/data/repositories/financial_summary_repository.dart'
    as _i20;
import 'package:cash_control/data/repositories/goal_repository.dart' as _i14;
import 'package:cash_control/data/repositories/user_repository.dart' as _i12;
import 'package:cash_control/data/services/financial_entry_service.dart'
    as _i21;
import 'package:cash_control/domain/enum/financial_entry_type.dart' as _i29;
import 'package:cash_control/domain/models/category.dart' as _i16;
import 'package:cash_control/domain/models/financial_entry.dart' as _i18;
import 'package:cash_control/domain/models/goal.dart' as _i2;
import 'package:cash_control/domain/models/user.dart' as _i13;
import 'package:cash_control/ui/view_model/category_registration_view_model.dart'
    as _i32;
import 'package:cash_control/ui/view_model/category_view_model.dart' as _i33;
import 'package:cash_control/ui/view_model/dashboard_view_model.dart' as _i35;
import 'package:cash_control/ui/view_model/financial_entry_edit_view_model.dart'
    as _i31;
import 'package:cash_control/ui/view_model/financial_entry_registration_view_model.dart'
    as _i28;
import 'package:cash_control/ui/view_model/financial_entry_view_model.dart'
    as _i30;
import 'package:cash_control/ui/view_model/goal_registration_view_model.dart'
    as _i26;
import 'package:cash_control/ui/view_model/goal_view_model.dart' as _i27;
import 'package:cash_control/ui/view_model/login_view_model.dart' as _i25;
import 'package:cash_control/ui/view_model/monthly_financial_chart_view_model.dart'
    as _i34;
import 'package:cash_control/ui/view_model/user_view_model.dart' as _i22;
import 'package:flutter/foundation.dart' as _i5;
import 'package:flutter/material.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i23;
import 'package:sqflite/sqflite.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGoal_0 extends _i1.SmartFake implements _i2.Goal {
  _FakeGoal_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_1 extends _i1.SmartFake
    implements _i3.TextEditingController {
  _FakeTextEditingController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_2 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_3 extends _i1.SmartFake implements _i4.Widget {
  _FakeWidget_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i5.DiagnosticLevel? minLevel = _i5.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeStatelessElement_4 extends _i1.SmartFake
    implements _i4.StatelessElement {
  _FakeStatelessElement_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i5.DiagnosticLevel? minLevel = _i5.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDiagnosticsNode_5 extends _i1.SmartFake
    implements _i5.DiagnosticsNode {
  _FakeDiagnosticsNode_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({
    _i5.TextTreeConfiguration? parentConfiguration,
    _i5.DiagnosticLevel? minLevel = _i5.DiagnosticLevel.info,
  }) =>
      super.toString();
}

class _FakeCategoryDao_6 extends _i1.SmartFake implements _i6.CategoryDao {
  _FakeCategoryDao_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFinancialEntryDao_7 extends _i1.SmartFake
    implements _i7.FinancialEntryDao {
  _FakeFinancialEntryDao_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoalDao_8 extends _i1.SmartFake implements _i8.GoalDao {
  _FakeGoalDao_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserDao_9 extends _i1.SmartFake implements _i9.UserDao {
  _FakeUserDao_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamController_10<T> extends _i1.SmartFake
    implements _i10.StreamController<T> {
  _FakeStreamController_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseExecutor_11 extends _i1.SmartFake
    implements _i11.DatabaseExecutor {
  _FakeDatabaseExecutor_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i12.UserRepository {
  @override
  _i10.Future<void> register(_i13.User? user) => (super.noSuchMethod(
        Invocation.method(
          #register,
          [user],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<bool> existsEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #existsEmail,
          [email],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<_i13.User?> getUserByEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i10.Future<_i13.User?>.value(),
        returnValueForMissingStub: _i10.Future<_i13.User?>.value(),
      ) as _i10.Future<_i13.User?>);

  @override
  _i10.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> forgotPassword() => (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [GoalRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoalRepository extends _i1.Mock implements _i14.GoalRepository {
  @override
  _i10.Future<List<_i2.Goal>> getGoals() => (super.noSuchMethod(
        Invocation.method(
          #getGoals,
          [],
        ),
        returnValue: _i10.Future<List<_i2.Goal>>.value(<_i2.Goal>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i2.Goal>>.value(<_i2.Goal>[]),
      ) as _i10.Future<List<_i2.Goal>>);

  @override
  _i10.Future<_i2.Goal> getGoal(String? name) => (super.noSuchMethod(
        Invocation.method(
          #getGoal,
          [name],
        ),
        returnValue: _i10.Future<_i2.Goal>.value(_FakeGoal_0(
          this,
          Invocation.method(
            #getGoal,
            [name],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i2.Goal>.value(_FakeGoal_0(
          this,
          Invocation.method(
            #getGoal,
            [name],
          ),
        )),
      ) as _i10.Future<_i2.Goal>);

  @override
  _i10.Future<int> addGoal(_i2.Goal? goal) => (super.noSuchMethod(
        Invocation.method(
          #addGoal,
          [goal],
        ),
        returnValue: _i10.Future<int>.value(0),
        returnValueForMissingStub: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> updateGoal(_i2.Goal? goal) => (super.noSuchMethod(
        Invocation.method(
          #updateGoal,
          [goal],
        ),
        returnValue: _i10.Future<int>.value(0),
        returnValueForMissingStub: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<void> deleteGoal(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteGoal,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> updateCurrentValue(
    String? id,
    double? currentValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCurrentValue,
          [
            id,
            currentValue,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [CategoryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryRepository extends _i1.Mock
    implements _i15.CategoryRepository {
  @override
  _i10.Future<void> register(_i16.Category? category) => (super.noSuchMethod(
        Invocation.method(
          #register,
          [category],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<List<_i16.Category>> findAll() => (super.noSuchMethod(
        Invocation.method(
          #findAll,
          [],
        ),
        returnValue: _i10.Future<List<_i16.Category>>.value(<_i16.Category>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i16.Category>>.value(<_i16.Category>[]),
      ) as _i10.Future<List<_i16.Category>>);

  @override
  _i10.Future<void> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [FinancialEntryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFinancialEntryRepository extends _i1.Mock
    implements _i17.FinancialEntryRepository {
  @override
  _i10.Future<void> register(_i18.FinancialEntry? financialEntry) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [financialEntry],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<List<_i18.FinancialEntry>> findAll() => (super.noSuchMethod(
        Invocation.method(
          #findAll,
          [],
        ),
        returnValue: _i10.Future<List<_i18.FinancialEntry>>.value(
            <_i18.FinancialEntry>[]),
        returnValueForMissingStub: _i10.Future<List<_i18.FinancialEntry>>.value(
            <_i18.FinancialEntry>[]),
      ) as _i10.Future<List<_i18.FinancialEntry>>);

  @override
  _i10.Future<void> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [FinancialReportRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFinancialReportRepository extends _i1.Mock
    implements _i19.FinancialReportRepository {
  @override
  _i10.Future<Map<String, List<_i18.FinancialEntry>>> getMonthlyReport(
          int? year) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonthlyReport,
          [year],
        ),
        returnValue: _i10.Future<Map<String, List<_i18.FinancialEntry>>>.value(
            <String, List<_i18.FinancialEntry>>{}),
        returnValueForMissingStub:
            _i10.Future<Map<String, List<_i18.FinancialEntry>>>.value(
                <String, List<_i18.FinancialEntry>>{}),
      ) as _i10.Future<Map<String, List<_i18.FinancialEntry>>>);

  @override
  _i10.Future<Map<int, List<_i18.FinancialEntry>>> getAnnualReport() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAnnualReport,
          [],
        ),
        returnValue: _i10.Future<Map<int, List<_i18.FinancialEntry>>>.value(
            <int, List<_i18.FinancialEntry>>{}),
        returnValueForMissingStub:
            _i10.Future<Map<int, List<_i18.FinancialEntry>>>.value(
                <int, List<_i18.FinancialEntry>>{}),
      ) as _i10.Future<Map<int, List<_i18.FinancialEntry>>>);
}

/// A class which mocks [FinancialSummaryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFinancialSummaryRepository extends _i1.Mock
    implements _i20.FinancialSummaryRepository {
  @override
  _i10.Future<Map<String, Map<String, double>>> getMonthlyTotals() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonthlyTotals,
          [],
        ),
        returnValue: _i10.Future<Map<String, Map<String, double>>>.value(
            <String, Map<String, double>>{}),
        returnValueForMissingStub:
            _i10.Future<Map<String, Map<String, double>>>.value(
                <String, Map<String, double>>{}),
      ) as _i10.Future<Map<String, Map<String, double>>>);
}

/// A class which mocks [FinancialEntryService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFinancialEntryService extends _i1.Mock
    implements _i21.FinancialEntryService {
  @override
  _i10.Future<void> createOrUpdateFinancialEntry(
          _i18.FinancialEntry? financialEntry) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOrUpdateFinancialEntry,
          [financialEntry],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<List<_i16.Category>> findAllCategories() => (super.noSuchMethod(
        Invocation.method(
          #findAllCategories,
          [],
        ),
        returnValue: _i10.Future<List<_i16.Category>>.value(<_i16.Category>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i16.Category>>.value(<_i16.Category>[]),
      ) as _i10.Future<List<_i16.Category>>);

  @override
  _i10.Future<List<_i18.FinancialEntry>> findAllFinancialEntries() =>
      (super.noSuchMethod(
        Invocation.method(
          #findAllFinancialEntries,
          [],
        ),
        returnValue: _i10.Future<List<_i18.FinancialEntry>>.value(
            <_i18.FinancialEntry>[]),
        returnValueForMissingStub: _i10.Future<List<_i18.FinancialEntry>>.value(
            <_i18.FinancialEntry>[]),
      ) as _i10.Future<List<_i18.FinancialEntry>>);

  @override
  _i10.Future<void> deleteFinancialEntry(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteFinancialEntry,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserver extends _i1.Mock implements _i3.NavigatorObserver {
  @override
  void didPush(
    _i3.Route<dynamic>? route,
    _i3.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPush,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didPop(
    _i3.Route<dynamic>? route,
    _i3.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPop,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didRemove(
    _i3.Route<dynamic>? route,
    _i3.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didRemove,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didReplace({
    _i3.Route<dynamic>? newRoute,
    _i3.Route<dynamic>? oldRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #didReplace,
          [],
          {
            #newRoute: newRoute,
            #oldRoute: oldRoute,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeTop(
    _i3.Route<dynamic>? topRoute,
    _i3.Route<dynamic>? previousTopRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didChangeTop,
          [
            topRoute,
            previousTopRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStartUserGesture(
    _i3.Route<dynamic>? route,
    _i3.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserViewModel extends _i1.Mock implements _i22.UserViewModel {
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#email),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#email),
        ),
      ) as String);

  @override
  String get password => (super.noSuchMethod(
        Invocation.getter(#password),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#password),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#password),
        ),
      ) as String);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isRegistered => (super.noSuchMethod(
        Invocation.getter(#isRegistered),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void setName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setName,
          [name],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setEmail(String? email) => super.noSuchMethod(
        Invocation.method(
          #setEmail,
          [email],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setPassword(String? password) => super.noSuchMethod(
        Invocation.method(
          #setPassword,
          [password],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIsRegistered(bool? isRegistered) => super.noSuchMethod(
        Invocation.method(
          #setIsRegistered,
          [isRegistered],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<void> registerUser() => (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LoginViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginViewModel extends _i1.Mock implements _i25.LoginViewModel {
  @override
  _i3.TextEditingController get emailController => (super.noSuchMethod(
        Invocation.getter(#emailController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#emailController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#emailController),
        ),
      ) as _i3.TextEditingController);

  @override
  _i3.TextEditingController get passwordController => (super.noSuchMethod(
        Invocation.getter(#passwordController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#passwordController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#passwordController),
        ),
      ) as _i3.TextEditingController);

  @override
  set error(String? _error) => super.noSuchMethod(
        Invocation.setter(
          #error,
          _error,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isLoading(bool? _isLoading) => super.noSuchMethod(
        Invocation.setter(
          #isLoading,
          _isLoading,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i10.Future<void> login(_i4.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #login,
          [context],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> register() => (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GoalRegistrationViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoalRegistrationViewModel extends _i1.Mock
    implements _i26.GoalRegistrationViewModel {
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  String get description => (super.noSuchMethod(
        Invocation.getter(#description),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#description),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#description),
        ),
      ) as String);

  @override
  double get targetValue => (super.noSuchMethod(
        Invocation.getter(#targetValue),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get currentValue => (super.noSuchMethod(
        Invocation.getter(#currentValue),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  DateTime get deadline => (super.noSuchMethod(
        Invocation.getter(#deadline),
        returnValue: _FakeDateTime_2(
          this,
          Invocation.getter(#deadline),
        ),
        returnValueForMissingStub: _FakeDateTime_2(
          this,
          Invocation.getter(#deadline),
        ),
      ) as DateTime);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void setName(String? value) => super.noSuchMethod(
        Invocation.method(
          #setName,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDescription(String? value) => super.noSuchMethod(
        Invocation.method(
          #setDescription,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setTargetValue(double? value) => super.noSuchMethod(
        Invocation.method(
          #setTargetValue,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCurrentValue(double? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentValue,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDeadline(DateTime? value) => super.noSuchMethod(
        Invocation.method(
          #setDeadline,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool validate() => (super.noSuchMethod(
        Invocation.method(
          #validate,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i10.Future<bool> saveGoal({
    required String? name,
    String? description,
    required double? targetValue,
    required double? currentValue,
    required DateTime? deadline,
    String? goalId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGoal,
          [],
          {
            #name: name,
            #description: description,
            #targetValue: targetValue,
            #currentValue: currentValue,
            #deadline: deadline,
            #goalId: goalId,
          },
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  void loadGoal(_i2.Goal? goal) => super.noSuchMethod(
        Invocation.method(
          #loadGoal,
          [goal],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearMessages() => super.noSuchMethod(
        Invocation.method(
          #clearMessages,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GoalViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoalViewModel extends _i1.Mock implements _i27.GoalViewModel {
  @override
  List<_i2.Goal> get goals => (super.noSuchMethod(
        Invocation.getter(#goals),
        returnValue: <_i2.Goal>[],
        returnValueForMissingStub: <_i2.Goal>[],
      ) as List<_i2.Goal>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i10.Future<void> loadGoals() => (super.noSuchMethod(
        Invocation.method(
          #loadGoals,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> deleteGoal(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteGoal,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> updateGoalProgress(
    String? id,
    double? currentValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGoalProgress,
          [
            id,
            currentValue,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  double getTotalSaved() => (super.noSuchMethod(
        Invocation.method(
          #getTotalSaved,
          [],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double getTotalTarget() => (super.noSuchMethod(
        Invocation.method(
          #getTotalTarget,
          [],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double getOverallProgress() => (super.noSuchMethod(
        Invocation.method(
          #getOverallProgress,
          [],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FinancialEntryRegistrationViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockFinancialEntryRegistrationViewModel extends _i1.Mock
    implements _i28.FinancialEntryRegistrationViewModel {
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  double get value => (super.noSuchMethod(
        Invocation.getter(#value),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i29.FinancialEntryType get type => (super.noSuchMethod(
        Invocation.getter(#type),
        returnValue: _i29.FinancialEntryType.despesa,
        returnValueForMissingStub: _i29.FinancialEntryType.despesa,
      ) as _i29.FinancialEntryType);

  @override
  DateTime get date => (super.noSuchMethod(
        Invocation.getter(#date),
        returnValue: _FakeDateTime_2(
          this,
          Invocation.getter(#date),
        ),
        returnValueForMissingStub: _FakeDateTime_2(
          this,
          Invocation.getter(#date),
        ),
      ) as DateTime);

  @override
  List<_i16.Category> get categories => (super.noSuchMethod(
        Invocation.getter(#categories),
        returnValue: <_i16.Category>[],
        returnValueForMissingStub: <_i16.Category>[],
      ) as List<_i16.Category>);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void setName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setName,
          [name],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setValue(double? value) => super.noSuchMethod(
        Invocation.method(
          #setValue,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCategory(_i16.Category? category) => super.noSuchMethod(
        Invocation.method(
          #setCategory,
          [category],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setType(_i29.FinancialEntryType? type) => super.noSuchMethod(
        Invocation.method(
          #setType,
          [type],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDate(DateTime? date) => super.noSuchMethod(
        Invocation.method(
          #setDate,
          [date],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<void> loadCategories() => (super.noSuchMethod(
        Invocation.method(
          #loadCategories,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> registerFinancialEntry() => (super.noSuchMethod(
        Invocation.method(
          #registerFinancialEntry,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void onItemTapped(int? index) => super.noSuchMethod(
        Invocation.method(
          #onItemTapped,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FinancialEntryViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockFinancialEntryViewModel extends _i1.Mock
    implements _i30.FinancialEntryViewModel {
  @override
  int get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i18.FinancialEntry> get financialEntries => (super.noSuchMethod(
        Invocation.getter(#financialEntries),
        returnValue: <_i18.FinancialEntry>[],
        returnValueForMissingStub: <_i18.FinancialEntry>[],
      ) as List<_i18.FinancialEntry>);

  @override
  List<_i16.Category> get categories => (super.noSuchMethod(
        Invocation.getter(#categories),
        returnValue: <_i16.Category>[],
        returnValueForMissingStub: <_i16.Category>[],
      ) as List<_i16.Category>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i10.Future<void> loadFinancialEntry() => (super.noSuchMethod(
        Invocation.method(
          #loadFinancialEntry,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> loadCategories() => (super.noSuchMethod(
        Invocation.method(
          #loadCategories,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  String getCategoryNameById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getCategoryNameById,
          [id],
        ),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #getCategoryNameById,
            [id],
          ),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #getCategoryNameById,
            [id],
          ),
        ),
      ) as String);

  @override
  double getBalance() => (super.noSuchMethod(
        Invocation.method(
          #getBalance,
          [],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  void onItemTapped(int? index) => super.noSuchMethod(
        Invocation.method(
          #onItemTapped,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FinancialEntryEditViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockFinancialEntryEditViewModel extends _i1.Mock
    implements _i31.FinancialEntryEditViewModel {
  @override
  _i3.TextEditingController get nameController => (super.noSuchMethod(
        Invocation.getter(#nameController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#nameController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#nameController),
        ),
      ) as _i3.TextEditingController);

  @override
  set nameController(_i3.TextEditingController? _nameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #nameController,
          _nameController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get valueController => (super.noSuchMethod(
        Invocation.getter(#valueController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#valueController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#valueController),
        ),
      ) as _i3.TextEditingController);

  @override
  set valueController(_i3.TextEditingController? _valueController) =>
      super.noSuchMethod(
        Invocation.setter(
          #valueController,
          _valueController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  double get value => (super.noSuchMethod(
        Invocation.getter(#value),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i29.FinancialEntryType get type => (super.noSuchMethod(
        Invocation.getter(#type),
        returnValue: _i29.FinancialEntryType.despesa,
        returnValueForMissingStub: _i29.FinancialEntryType.despesa,
      ) as _i29.FinancialEntryType);

  @override
  DateTime get date => (super.noSuchMethod(
        Invocation.getter(#date),
        returnValue: _FakeDateTime_2(
          this,
          Invocation.getter(#date),
        ),
        returnValueForMissingStub: _FakeDateTime_2(
          this,
          Invocation.getter(#date),
        ),
      ) as DateTime);

  @override
  List<_i16.Category> get categories => (super.noSuchMethod(
        Invocation.getter(#categories),
        returnValue: <_i16.Category>[],
        returnValueForMissingStub: <_i16.Category>[],
      ) as List<_i16.Category>);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void setName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setName,
          [name],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setValue(double? value) => super.noSuchMethod(
        Invocation.method(
          #setValue,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCategory(_i16.Category? category) => super.noSuchMethod(
        Invocation.method(
          #setCategory,
          [category],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setType(_i29.FinancialEntryType? type) => super.noSuchMethod(
        Invocation.method(
          #setType,
          [type],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDate(DateTime? date) => super.noSuchMethod(
        Invocation.method(
          #setDate,
          [date],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<void> loadCategories() => (super.noSuchMethod(
        Invocation.method(
          #loadCategories,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> updateFinancialEntry() => (super.noSuchMethod(
        Invocation.method(
          #updateFinancialEntry,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> deleteFinancialEntry(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteFinancialEntry,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void onItemTapped(int? index) => super.noSuchMethod(
        Invocation.method(
          #onItemTapped,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CategoryRegistrationViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryRegistrationViewModel extends _i1.Mock
    implements _i32.CategoryRegistrationViewModel {
  @override
  int get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void setName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setName,
          [name],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<void> registerCategory() => (super.noSuchMethod(
        Invocation.method(
          #registerCategory,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void onItemTapped(int? index) => super.noSuchMethod(
        Invocation.method(
          #onItemTapped,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CategoryViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryViewModel extends _i1.Mock implements _i33.CategoryViewModel {
  @override
  int get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i16.Category> get categories => (super.noSuchMethod(
        Invocation.getter(#categories),
        returnValue: <_i16.Category>[],
        returnValueForMissingStub: <_i16.Category>[],
      ) as List<_i16.Category>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i10.Future<void> loadCategories() => (super.noSuchMethod(
        Invocation.method(
          #loadCategories,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> deleteCategory(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCategory,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void onItemTapped(int? index) => super.noSuchMethod(
        Invocation.method(
          #onItemTapped,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MonthlyFinancialChart].
///
/// See the documentation for Mockito's code generation for more information.
class MockMonthlyFinancialChart extends _i1.Mock
    implements _i34.MonthlyFinancialChart {
  @override
  Map<String, Map<String, double>> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <String, Map<String, double>>{},
        returnValueForMissingStub: <String, Map<String, double>>{},
      ) as Map<String, Map<String, double>>);

  @override
  _i4.Widget build(_i4.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #build,
          [context],
        ),
        returnValue: _FakeWidget_3(
          this,
          Invocation.method(
            #build,
            [context],
          ),
        ),
        returnValueForMissingStub: _FakeWidget_3(
          this,
          Invocation.method(
            #build,
            [context],
          ),
        ),
      ) as _i4.Widget);

  @override
  _i4.StatelessElement createElement() => (super.noSuchMethod(
        Invocation.method(
          #createElement,
          [],
        ),
        returnValue: _FakeStatelessElement_4(
          this,
          Invocation.method(
            #createElement,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeStatelessElement_4(
          this,
          Invocation.method(
            #createElement,
            [],
          ),
        ),
      ) as _i4.StatelessElement);

  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
      ) as String);

  @override
  void debugFillProperties(_i5.DiagnosticPropertiesBuilder? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String toStringShallow({
    String? joiner = ', ',
    _i5.DiagnosticLevel? minLevel = _i5.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringShallow,
          [],
          {
            #joiner: joiner,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShallow,
            [],
            {
              #joiner: joiner,
              #minLevel: minLevel,
            },
          ),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShallow,
            [],
            {
              #joiner: joiner,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  String toStringDeep({
    String? prefixLineOne = '',
    String? prefixOtherLines,
    _i5.DiagnosticLevel? minLevel = _i5.DiagnosticLevel.debug,
    int? wrapWidth = 65,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringDeep,
          [],
          {
            #prefixLineOne: prefixLineOne,
            #prefixOtherLines: prefixOtherLines,
            #minLevel: minLevel,
            #wrapWidth: wrapWidth,
          },
        ),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #toStringDeep,
            [],
            {
              #prefixLineOne: prefixLineOne,
              #prefixOtherLines: prefixOtherLines,
              #minLevel: minLevel,
              #wrapWidth: wrapWidth,
            },
          ),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #toStringDeep,
            [],
            {
              #prefixLineOne: prefixLineOne,
              #prefixOtherLines: prefixOtherLines,
              #minLevel: minLevel,
              #wrapWidth: wrapWidth,
            },
          ),
        ),
      ) as String);

  @override
  _i5.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i5.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_5(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
        returnValueForMissingStub: _FakeDiagnosticsNode_5(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i5.DiagnosticsNode);

  @override
  List<_i5.DiagnosticsNode> debugDescribeChildren() => (super.noSuchMethod(
        Invocation.method(
          #debugDescribeChildren,
          [],
        ),
        returnValue: <_i5.DiagnosticsNode>[],
        returnValueForMissingStub: <_i5.DiagnosticsNode>[],
      ) as List<_i5.DiagnosticsNode>);

  @override
  String toString({_i5.DiagnosticLevel? minLevel = _i5.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [DashboardViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockDashboardViewModel extends _i1.Mock
    implements _i35.DashboardViewModel {
  @override
  int get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void onItemTapped(int? index) => super.noSuchMethod(
        Invocation.method(
          #onItemTapped,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<void> logout(_i4.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [context],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> forgotPassword(_i4.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [context],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDatabase extends _i1.Mock implements _i36.AppDatabase {
  @override
  _i6.CategoryDao get categoryDao => (super.noSuchMethod(
        Invocation.getter(#categoryDao),
        returnValue: _FakeCategoryDao_6(
          this,
          Invocation.getter(#categoryDao),
        ),
        returnValueForMissingStub: _FakeCategoryDao_6(
          this,
          Invocation.getter(#categoryDao),
        ),
      ) as _i6.CategoryDao);

  @override
  _i7.FinancialEntryDao get financialEntryDao => (super.noSuchMethod(
        Invocation.getter(#financialEntryDao),
        returnValue: _FakeFinancialEntryDao_7(
          this,
          Invocation.getter(#financialEntryDao),
        ),
        returnValueForMissingStub: _FakeFinancialEntryDao_7(
          this,
          Invocation.getter(#financialEntryDao),
        ),
      ) as _i7.FinancialEntryDao);

  @override
  _i8.GoalDao get goalDao => (super.noSuchMethod(
        Invocation.getter(#goalDao),
        returnValue: _FakeGoalDao_8(
          this,
          Invocation.getter(#goalDao),
        ),
        returnValueForMissingStub: _FakeGoalDao_8(
          this,
          Invocation.getter(#goalDao),
        ),
      ) as _i8.GoalDao);

  @override
  _i9.UserDao get userDao => (super.noSuchMethod(
        Invocation.getter(#userDao),
        returnValue: _FakeUserDao_9(
          this,
          Invocation.getter(#userDao),
        ),
        returnValueForMissingStub: _FakeUserDao_9(
          this,
          Invocation.getter(#userDao),
        ),
      ) as _i9.UserDao);

  @override
  _i10.StreamController<String> get changeListener => (super.noSuchMethod(
        Invocation.getter(#changeListener),
        returnValue: _FakeStreamController_10<String>(
          this,
          Invocation.getter(#changeListener),
        ),
        returnValueForMissingStub: _FakeStreamController_10<String>(
          this,
          Invocation.getter(#changeListener),
        ),
      ) as _i10.StreamController<String>);

  @override
  set changeListener(_i10.StreamController<String>? _changeListener) =>
      super.noSuchMethod(
        Invocation.setter(
          #changeListener,
          _changeListener,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.DatabaseExecutor get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeDatabaseExecutor_11(
          this,
          Invocation.getter(#database),
        ),
        returnValueForMissingStub: _FakeDatabaseExecutor_11(
          this,
          Invocation.getter(#database),
        ),
      ) as _i11.DatabaseExecutor);

  @override
  set database(_i11.DatabaseExecutor? _database) => super.noSuchMethod(
        Invocation.setter(
          #database,
          _database,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [CategoryDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryDao extends _i1.Mock implements _i6.CategoryDao {
  @override
  _i10.Future<List<_i37.CategoryEntity>> findAll() => (super.noSuchMethod(
        Invocation.method(
          #findAll,
          [],
        ),
        returnValue: _i10.Future<List<_i37.CategoryEntity>>.value(
            <_i37.CategoryEntity>[]),
        returnValueForMissingStub: _i10.Future<List<_i37.CategoryEntity>>.value(
            <_i37.CategoryEntity>[]),
      ) as _i10.Future<List<_i37.CategoryEntity>>);

  @override
  _i10.Future<void> insertCategory(_i37.CategoryEntity? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertCategory,
          [category],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> deleteCategory(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCategory,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}
